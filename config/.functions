#!/usr/bin/bash -i

# Simple bash functions for use in the terminal or other scripts


current_git_branch() {
    local gitBranch=$(git branch 2> /dev/null | sed -e "/^[^*]/d" -e "s/* \(.*\)/\1/")
    if [[ $gitBranch ]]; then
        echo -en $gitBranch
        return
    fi
}

current_git_status() {
  local gitBranch="$(current_git_branch)"
  if [[ $gitBranch ]]; then
    local statusCheck=$(git status 2> /dev/null)
    if [[ $statusCheck =~ 'Your branch is ahead' ]]; then
      echo 'ahead'
    elif [[ $statusCheck =~ 'Changes to be committed' ]]; then
      echo 'staged'
    elif [[ $statusCheck =~ 'no changes added' ]]; then
      echo 'modified'
    elif [[ $statusCheck =~ 'working tree clean' ]]; then
      echo 'clean'
    fi
  fi
}

git_dot() {
  local gitCheck="$(current_git_branch)"
  if [[ $gitCheck ]]; then
    local gitStatus="$(current_git_status)"

    case $gitStatus in
      staged) gitStatusDot='◍' ;;
      modified) gitStatusDot='○' ;;
      *) gitStatusDot='●' ;;
    esac

    echo "$gitStatusDot"
  fi
}

gg() {
    if [[ $# -eq 0 ]]; then
        read -p "Enter you Google query: " query
    else
        query=$*
    fi

    explorer.exe "https://www.google.com/search?q=${query}"
}
alias google=gg

mk() {
    mkdir -p "$@" && cd "$@" || exit
}

push() {
    local topic="danny_is_alerted"
    http POST ntfy.sh/"${topic}" alert="$*"
}

push_to_topic() {
    local topic=$1
    shift
    local message=$*

    http POST ntfy.sh/"${topic}" alert="${message}"
}

url() {
    case $(uname -s) in
    Darwin)   open='open';;
    MINGW*)   open='start';;
    MSYS*)    open='start';;
    CYGWIN*)  open='cygstart';;
    *)  # Try to detect WSL (Windows Subsystem for Linux)
        if uname -r | grep -q -i microsoft; then
            open='powershell.exe -NoProfile Start'
        else
            open='xdg-open'
        fi;;
    esac

    URL=$1

    if [[ "${URL}" != https* ]]; then
        URL="https://${URL}"
    fi

    ${BROWSER:-"${open}"} "${URL}"
}
